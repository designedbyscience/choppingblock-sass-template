// 
// chop_utilities.scss
// @author: Chopping Block (choppingblock.com)

@mixin reset(){
	/* http://meyerweb.com/eric/tools/css/reset/ 
	   v2.0 | 20110126
	   License: none (public domain)
	*/

	html, body, div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed, 
	figure, figcaption, footer, header, hgroup, 
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		margin: 0;
		padding: 0;
		border: 0;
		font-size: 100%;
		font: inherit;
		vertical-align: baseline;
	}
	/* HTML5 display-role reset for older browsers */
	article, aside, details, figcaption, figure, 
	footer, header, hgroup, menu, nav, section {
		display: block;
	}
	body {
		line-height: 1;
	}
	ol, ul {
		list-style: none;
	}
	blockquote, q {
		quotes: none;
	}
	blockquote:before, blockquote:after,
	q:before, q:after {
		content: '';
		content: none;
	}
	table {
		border-collapse: collapse;
		border-spacing: 0;
	}
}

@mixin float_utilities(){
	.fr{
		float: right;
	}
	.fl{
		float: left;
	}
}

//********************
//CSS3 Mixins:

@mixin rounded_all($radius){
	border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
}

@mixin rounded($side, $radius: 10px) {
  border-#{$side}-radius: $radius;
  -moz-border-radius-#{$side}: $radius;
  -webkit-border-#{$side}-radius: $radius;
}


@mixin box-shadow(){
  	-webkit-box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.3);
  	-moz-box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.3);
  	box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.3);				
}

@mixin transform($value){
	-webkit-transform: #{$value};
	-moz-transform: #{$value};
	-o-transform: #{$value};		
	transform: #{$value};	
}

@mixin transition($value){
	-webkit-transition: #{$value};	
	-moz-transition: #{$value};	
	-o-transition: #{$value};	
	transition: #{$value};				
}

@mixin user-select($value: none){
	-webkit-touch-callout: $value;
	-webkit-user-select: $value;
	-khtml-user-select: value;
	-moz-user-select: value;
	-ms-user-select: value;
	user-select: value;
}

//::-webkit-scrollbar;

//::-webkit-scrollbar-button:start:decrement, ::-webkit-scrollbar-button:end:increment;

//::-webkit-scrollbar-track-piece;

//::-webkit-scrollbar-thumb:vertical;


//********************
//Responsive Mixins:

@mixin respond-to($media) {
  @if $media == mobile {
    @media handheld and (max-width: 480px), screen and (max-device-width: 480px), screen and (max-width: 600px) { @content; }
  }
  @else if $media == medium-screens {
 	@media screen and (min-width: 920px) { @content; }
  }
  @else if $media == large-screens {
 	@media screen and (min-width: 1350px){ @content; }
  }
  @else if $media == wide-screens {
	@media screen and (min-width: 1500px) { @content; }
  }
  @else if $media == iphone{
 	@media only screen and (max-device-width: 480px) { @content; }
	}
  @else if $media == ipad {
 	@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) { @content; }
	
 }	
}
//**********************
//Grid generation mixins
//Makes spann_i and offsetn_i classes
//Needs to include grid_prereqs to work properly

@mixin grid_prereqs(){
	.row {
	  margin-left: -20px;
	  *zoom: 1;
	}
	
	.row:before,
	.row:after {
	  display: table;
	  content: "";
	  line-height: 0;
	}
	.row:after {
	  clear: both;
	}
	[class*="span"] {
	  float: left;
	  min-height: 1px;
	}
}

@mixin grid_columns($columns){
	
	@for $i from 1 through $columns{

		.span#{$columns}_#{$i}{
			width: (100 / $columns)*$i;		
		}

		.offset#{$columns}_#{$i}{
			margin-left: (100 / $columns)*$i;			
		}		
	}
}

